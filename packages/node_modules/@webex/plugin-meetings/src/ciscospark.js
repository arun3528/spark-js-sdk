import '@webex/plugin-authorization';
import '@webex/internal-plugin-wdm';
import '@webex/plugin-logger';
import '@ciscospark/plugin-people';
import '@ciscospark/plugin-rooms';

import SparkCore, {MemoryStoreAdapter} from '@ciscospark/spark-core';
import merge from 'lodash/merge';

const CiscoSpark = SparkCore.extend({
  ciscospark: true,
  version: PACKAGE_VERSION
});

CiscoSpark.version = PACKAGE_VERSION;

CiscoSpark.init = function init(attrs = {}) {
  const config = merge({}, {
    hydra: process.env.HYDRA_SERVICE_URL || 'https://api.ciscospark.com/v1',
    credentials: {
      clientType: 'confidential'
    },
    device: {
      ephemeral: true
    },
    storage: {
      boundedAdapter: MemoryStoreAdapter,
      unboundedAdapter: MemoryStoreAdapter
    }
  }, attrs.config);

  return new CiscoSpark(merge({}, {config}, attrs));
};

export default CiscoSpark;
